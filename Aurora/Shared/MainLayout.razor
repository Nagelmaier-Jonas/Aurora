@using Model.Entities
@inherits LayoutComponentBase
@using System.ComponentModel.DataAnnotations
@using Domain.Repositories
@using Microsoft.AspNetCore.Components
@inject UserRepository _userRepository
<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>
<div class="page">
    <main>
        <MudAppBar Color="Color.Dark" Fixed="true" Elevation="0">
            <MudSpacer/>
            <MudIconButton Icon="@Icons.Filled.ArrowBackIos" Color="Color.Error" Href="/" Target="_self"></MudIconButton>
            <MudSpacer/>
            <MudText>Aurora</MudText>
            <MudSpacer/>
            @if (_logedIn){
               <MudIconButton Icon="@Icons.Filled.Construction" Color="Color.Success" Href="/convoybuilder" Target="_self"></MudIconButton> 
            }
            else{
                <MudIconButton Icon="@Icons.Filled.AppRegistration" Color="Color.Success" OnClick="() => _registerWindow = true">Register</MudIconButton> 
            }
            <MudSpacer/>
        </MudAppBar>
        @Body
        @if (_registerWindow){
            <EditForm Model="@_user" OnValidSubmit="Register">
            <DataAnnotationsValidator/>
            <MudGrid>
                <MudItem xs="12" sm="7">
                    <MudCard>
                        <MudCardContent>
                            <MudTextField Label="Name" HelperText="Max. 8 characters"
                                          @bind-Value="_user.Name" For="@(() => _user.Name)"/>
                            <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                                          @bind-Value="_user.Password" For="@(() => _user.Password)" InputType="InputType.Password"/>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
                <MudItem xs="12" sm="5">
                    <MudPaper Class="pa-4 mud-height-full">
                        <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
                        @if (success)
                        {
                            <MudText Color="Color.Success">Success</MudText>
                        }
                        else
                        {
                            <MudText Color="@Color.Error">
                                <ValidationSummary />
                            </MudText>
                        }
                    </MudPaper>
                </MudItem>
                <MudItem xs="12">
                    <MudText Typo="Typo.body2" Align="Align.Center">
                        Fill out the form correctly to see the success message.
                    </MudText>
                </MudItem>
            </MudGrid>
            </EditForm>
        }
    </main>
</div>

@code{

    [Parameter]
    public User _user { get; set; } = new User();

    public bool _logedIn { get; set; } = false;

    public bool _registerWindow { get; set; }
    
    bool success;

    private async Task Register(){
        success = true;
        await _userRepository.UpdateAsync(_user);
        _logedIn = true;
        _registerWindow = false;
    }
    
    private void Login(){
        _logedIn = true;
        _registerWindow = false;
    }

}
