// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Configuration;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(AuroraDbContext))]
    [Migration("20220405185218_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Model.Entities.Addon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ELEMENT_ID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CODE");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("IMAGE_URL");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("PRICE");

                    b.HasKey("Id");

                    b.ToTable("ADDONS");
                });

            modelBuilder.Entity("Model.Entities.Convoy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BackTruckId")
                        .HasColumnType("int")
                        .HasColumnName("BACK_TRUCK_ID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("CODE");

                    b.Property<int?>("FrontTruckId")
                        .HasColumnType("int")
                        .HasColumnName("FRONT_TRUCK_ID");

                    b.HasKey("Id");

                    b.HasIndex("BackTruckId")
                        .IsUnique();

                    b.HasIndex("FrontTruckId")
                        .IsUnique();

                    b.ToTable("CONVOY");
                });

            modelBuilder.Entity("Model.Entities.Truck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ELEMENT_ID");

                    b.Property<int?>("AddonId")
                        .HasColumnType("int")
                        .HasColumnName("ADDON_ID");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("CAPACITY");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CODE");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("IMAGE_URL");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("PRICE");

                    b.Property<int>("Speed")
                        .HasColumnType("int")
                        .HasColumnName("SPEED");

                    b.HasKey("Id");

                    b.HasIndex("AddonId");

                    b.ToTable("TRUCKS");
                });

            modelBuilder.Entity("Model.Entities.Wagon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ELEMENT_ID");

                    b.Property<int?>("AddonId")
                        .HasColumnType("int")
                        .HasColumnName("ADDON_ID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CODE");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("IMAGE_URL");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("PRICE");

                    b.Property<int?>("TruckId")
                        .HasColumnType("int")
                        .HasColumnName("TRUCK_ID");

                    b.HasKey("Id");

                    b.HasIndex("AddonId");

                    b.HasIndex("TruckId");

                    b.ToTable("WAGGONS");
                });

            modelBuilder.Entity("Model.Entities.Convoy", b =>
                {
                    b.HasOne("Model.Entities.Truck", "BackTruck")
                        .WithOne()
                        .HasForeignKey("Model.Entities.Convoy", "BackTruckId");

                    b.HasOne("Model.Entities.Truck", "FrontTruck")
                        .WithOne()
                        .HasForeignKey("Model.Entities.Convoy", "FrontTruckId");

                    b.Navigation("BackTruck");

                    b.Navigation("FrontTruck");
                });

            modelBuilder.Entity("Model.Entities.Truck", b =>
                {
                    b.HasOne("Model.Entities.Addon", "Addon")
                        .WithMany()
                        .HasForeignKey("AddonId");

                    b.Navigation("Addon");
                });

            modelBuilder.Entity("Model.Entities.Wagon", b =>
                {
                    b.HasOne("Model.Entities.Addon", "Addon")
                        .WithMany()
                        .HasForeignKey("AddonId");

                    b.HasOne("Model.Entities.Truck", "Truck")
                        .WithMany("Wagons")
                        .HasForeignKey("TruckId");

                    b.Navigation("Addon");

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("Model.Entities.Truck", b =>
                {
                    b.Navigation("Wagons");
                });
#pragma warning restore 612, 618
        }
    }
}
