// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Configuration;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(AuroraDbContext))]
    [Migration("20220404210411_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Model.Entities.Database.Convoy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConvoyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CONVOYS");
                });

            modelBuilder.Entity("Model.Entities.Database.Slot", b =>
                {
                    b.Property<int>("SlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CurrentItem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDamaged")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("SlotId");

                    b.HasIndex("VehicleId");

                    b.ToTable("SLOTS");
                });

            modelBuilder.Entity("Model.Entities.Database.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("VehicleId");

                    b.ToTable("VEHICLES");
                });

            modelBuilder.Entity("Model.Entities.Database.Addon", b =>
                {
                    b.HasBaseType("Model.Entities.Database.Vehicle");

                    b.ToTable("ADDONS");
                });

            modelBuilder.Entity("Model.Entities.Database.Truck", b =>
                {
                    b.HasBaseType("Model.Entities.Database.Vehicle");

                    b.Property<int>("ConvoyId")
                        .HasColumnType("int");

                    b.HasIndex("ConvoyId");

                    b.ToTable("TRUCKS");
                });

            modelBuilder.Entity("Model.Entities.Database.Wagon", b =>
                {
                    b.HasBaseType("Model.Entities.Database.Vehicle");

                    b.Property<int>("TruckId")
                        .HasColumnType("int");

                    b.HasIndex("TruckId");

                    b.ToTable("WAGONS");
                });

            modelBuilder.Entity("Model.Entities.Database.Slot", b =>
                {
                    b.HasOne("Model.Entities.Database.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Model.Entities.Database.Addon", b =>
                {
                    b.HasOne("Model.Entities.Database.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("Model.Entities.Database.Addon", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Entities.Database.Truck", b =>
                {
                    b.HasOne("Model.Entities.Database.Convoy", "Convoy")
                        .WithMany()
                        .HasForeignKey("ConvoyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Entities.Database.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("Model.Entities.Database.Truck", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convoy");
                });

            modelBuilder.Entity("Model.Entities.Database.Wagon", b =>
                {
                    b.HasOne("Model.Entities.Database.Truck", "Truck")
                        .WithMany()
                        .HasForeignKey("TruckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Entities.Database.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("Model.Entities.Database.Wagon", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Truck");
                });
#pragma warning restore 612, 618
        }
    }
}
